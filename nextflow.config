/**
	Yet Another Metagenomic Pipeline (YAMP)
	Copyright (C) 2017 	Dr Alessia Visconti 	      
	      
	This script is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.
	
	This script is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.
	
	You should have received a copy of the GNU General Public License
	along with this script.  If not, see <http://www.gnu.org/licenses/>.
	
	For any bugs or problems found, please contact us at
	- alessia.visconti@kcl.ac.uk ; 
	- https://github.com/alesssia/YAMP/issues
*/

manifest
{
  homePage = 'https://github.com/alesssia/YAMP'
  description = 'YAMP : Yet Another Metagenomic Pipeline'
  mainScript = 'YAMP.nf'
}

docker.enabled="true"
process.container='alesssia/yampdocker'

trace 
{
    enabled = true
    fields = 'task_id, name, status, exit, module, submit, start, complete, duration, realtime, %cpu, rss, vmem, peak_rss, peak_vmem'
}

timeline 
{
    enabled = true
}


params 
{
	//DO NOT CHANGE
	
	//These are used when the analysis is in characterisation mode
	reads1 = "null"
	reads2 = "null"
	
	//These are used to print version and help
	help = null
	version = null
	
	/*--------------------------------*
	 *	EXECUTION FLOW PARAMETERS
	 *--------------------------------*/	

	//Whether we the input reads are paired-end (two files, librarylayout="paired")
	//or single-end (one file, librarylayout="single")
	librarylayout = "paired"
	
	//Whether the de-duplication step should be performed
	dedup = true
			
	//Whether the temporary files resulting from QC steps should be kept
	keepQCtmpfile = false
	//Whether the temporary files resulting from MetaPhlAn2 and HUMAnN2 should be kept
	keepCCtmpfile = false 

	/*--------------------------------*
	 *	PATHS TO EXTERNAL RESOURCES
	 *--------------------------------*/
		
	//Adapter sequences and synthetic contaminants to be removed in the trimming step
	adapters="./resources/adapters.fa"	
	artifacts="./resources/sequencing_artifacts.fa.gz"
	phix174ill="./resources/phix174_ill.ref.fa.gz"	
	
	//Reference pan-genome for contamination. It should have been indexed beforehand.
	refForeingGenome="./resources/"
	
	//BowTie2 database for MetaPhlAn2
	mpa_pkl="./resources/bowtie2db/db_v20/mpa_v20_m200.pkl"
	bowtie2db="./resources/bowtie2db/db_v20/"
	bowtie2dbfiles="mpa_v20_m200"
	
	// ChocoPhlAn and UniRef databases
	chocophlan="./resources/chocophlan"
	uniref="./resources/uniref/uniref90"	
	
	//[OPTIONAL]
    //Newick tree filepath, required for phylogenetic alpha diversity (PD_whole_tree, QIIME)
	treepath="null" 
	
	/*--------------------------------*
	 *	SOFTWARE PARAMETERS
	 *--------------------------------*/

	//BBduk parameters for trimming	
	qin=33 //Input quality offset: 33 (ASCII+33) or 64 (ASCII+64)
	kcontaminants = 23 //Kmer length used for finding contaminants	
	phred = 10 //regions with average quality BELOW this will be trimmed 
	minlength = 60 //reads shorter than this after trimming will be discarded
    mink = 11 //shorter kmers at read tips to look for 
	hdist = 1  //maximum Hamming distance for ref kmers            

	//BBwrap parameters for decontamination	
	mind = 0.95 //Approximate minimum alignment identity to look for
	maxindel = 3 //longest indel to look for
	bwr=0.16 //restrict alignment band to this
	
	//MetaPhlAn2 parameters 
	bt2options="very-sensitive" //presets options for BowTie2
}


process 
{
	//executor should be set to 'pbs' when a resource manager belonging to the 
	//PBS/Torque family of batch schedulers is used, or set to 'sge' when using  
	//a Sun Grid Engine cluster (or a compatible platform, e.g., Open Grid Engine)
	
	//Set the used queue, this queue will be used for all the processes	
	queue = 'metagenome'
	
	
	$qualityAssessment
	{
		time =  '15m'
		cpus = 4
		memory = '8 GB'
		jobName = "qualityAssessment"	  
	}
	
	$dedup
	{
		time =  '1h'
		cpus = 4
		memory = '32 GB'
		jobName = "dedup"	  
	}	
	
	$trim 
	{
		time =  '1h'
		cpus = 4
		memory = '32 GB'
		jobName = "trim"	  
	}	
	
	$decontaminate 
	{
		time =  '3h'
		cpus = 4
		memory = '32 GB'
		jobName = "decontaminate"	  
	}
	
	$profileTaxa 
	{
		time =  '2h'
		cpus = 4
		memory = '32 GB'
		jobName = "profileTaxa"	  
	}
	
	$alphaDiversity
	{
		time =  '30m'
		cpus = 1
		memory = '8 GB'
		jobName = "alphaDiversity"	  
	}
	
	$profileFunction 
	{
		time =  '24h'
		cpus = 4
		memory = '32 GB'
		jobName = "profileFunction"	  
	}	
	
	$logQC
	{
		time =  '15m'
		cpus = 1
		memory = '100 MB'
		jobName = "logQC"	  
	}
	
	$saveQCtmpfile
	{
		time =  '1h'
		cpus = 1
		memory = '4 GB'
		jobName = "saveQCtmpfile"	  
	}	
	
	$logCC
	{
		time =  '15m'
		cpus = 1
		memory = '100 MB'
		jobName = "logCC"	  
	}	
	
	$saveCCtmpfile
	{
		time =  '15m'
		cpus = 1
		memory = '100 MB'
		jobName = "saveCCtmpfile"	  
	}		
}
